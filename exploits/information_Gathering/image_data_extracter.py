import os
import sys
from PIL import Image
from PIL.ExifTags import GPSTAGS, TAGS
from modules.colour import bright as br


def data_extracter_from_images(choose_options_1_or_2, forder_or_filename) -> str:
    def maps(gps_co_ordinate):
        latitude = decimal_degree(float(gps_co_ordinate["lat"][0]), float(
            gps_co_ordinate["lat"][1]), float(gps_co_ordinate["lat"][2]), gps_co_ordinate["lat_ref"])
        logitude = decimal_degree(float(gps_co_ordinate["lon"][0]), float(
            gps_co_ordinate["lon"][1]), float(gps_co_ordinate["lon"][2]), gps_co_ordinate["lon_ref"])

        return f"https://maps.google.com/?q={latitude},{logitude}"


    def decimal_degree(degree, minutes, seconds, direction):
        decimal_degree = degree + minutes / 60 + seconds / 3600

        if direction == "S" or direction == "W":
            decimal_degree *= -1
        return decimal_degree


    while True:
        input_1 = str(choose_options_1_or_2)
        try:
            var1 = str(input_1)
            if var1 == "1" or var1 == "01":
                sys.stdout = open("data.txt", "w")
                break
            elif var1 == "2" or var1 == "02":
                break
            else:
                print("None")
        except:
            print("OK")

    cwd = os.getcwd()
    os.chdir(os.path.join(cwd, str(forder_or_filename)))
    files = os.listdir()

    if len(files) == 0:
        print(f"{br.red_1}You have not file")
        sys.exit(0)
    for file in files:
        try:
            image = Image.open(file)
            gps_co_ordinate = {}
            if image._getexif() == None:
                print(f"{br.green_1}{file} ---> {br.red_1} no data found")
            else:
                for tag, value in image._getexif().items():
                    tag_name = TAGS.get(tag)
                    if tag_name == "GPSInfo":
                        for key, val in value.items():
                            print(f"{GPSTAGS.get(key)} - {val}")

                            if GPSTAGS.get(key) == "GPSLatitude":
                                gps_co_ordinate["lat"] == val
                            elif GPSTAGS.get(key) == "GPSLongitude":
                                gps_co_ordinate["lon"] == val
                            elif GPSTAGS.get(key) == "GPSLatitudeRef":
                                gps_co_ordinate["lat_ref"] = val
                            elif GPSTAGS.get(key) == "GPSLongitudeRef":
                                gps_co_ordinate["lon_ref"] = val
                    else:
                        print(f"{tag_name} - {value}")
                if gps_co_ordinate:
                    print(maps(gps_co_ordinate))
        except IOError:
            print(f"{br.yellow_1}File not Supported")
    if input_1 == "1":
        sys.stdout.close()
    os.chdir(cwd)

